name: Scheduled

on:
  pull_request:
    paths:
      - scripts/get_scarb_versions.sh
      - .github/workflows/scheduled.yml
#  schedule:
#    - cron: '0 0 * * 3,6'
  push:
    branches:
      - 2578-scheduled-testing-different-scarb-versions-fork-test

jobs:
  get-scarb-versions:
    name: Get Scarb versions
    outputs:
      versions: ${{ steps.get_versions.outputs.versions }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: asdf-vm/actions/install@05e0d2ed97b598bfce82fd30daf324ae0c4570e6
        with:
          tool_versions: |
            scarb latest

      - name: Get versions
        id: get_versions
        run: |
          scarb_versions=$(./scripts/get_scarb_versions.sh)
          echo ${scarb_versions[@]}
          echo "versions=[${scarb_versions[@]}]" >> "$GITHUB_OUTPUT"

  build-test-nextest-archive:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@82a92a6e8fbeee089604da2575dc567ae9ddeaab
      - uses: taiki-e/install-action@nextest

      - name: Build and archive forge tests
        run: cargo nextest archive --release -p forge --archive-file nextest-forge-archive.tar.zst

      - name: Upload forge archive to workflow
        uses: actions/upload-artifact@v4
        with:
          name: nextest-forge-archive
          path: nextest-forge-archive.tar.zst

      - name: Build and archive cast tests
        run: cargo nextest archive --release -p sncast --archive-file nextest-cast-archive.tar.zst

      - name: Upload cast archive to workflow
        uses: actions/upload-artifact@v4
        with:
          name: nextest-cast-archive
          path: nextest-cast-archive.tar.zst

  test-forge-e2e:
    runs-on: ubuntu-latest
    needs: [ get-scarb-versions, build-test-nextest-archive]
    strategy:
      fail-fast: false
      matrix:
        partition: [ 1, 2, 3, 4 ]
        version: ${{ fromJSON(needs.get-scarb-versions.outputs.versions) }}

    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@82a92a6e8fbeee089604da2575dc567ae9ddeaab
      - uses: software-mansion/setup-scarb@v1
        with:
          scarb-version: ${{ matrix.version }}
      - uses: software-mansion/setup-universal-sierra-compiler@v1
      - name: Install cairo-profiler
        run: |
          curl -L https://raw.githubusercontent.com/software-mansion/cairo-profiler/main/scripts/install.sh | sh
      - uses: taiki-e/install-action@nextest
      - uses: actions/download-artifact@v4
        with:
          name: nextest-forge-archive

      - name: Check scarb version
        run: scarb --version

      - name: nextest partition e2e ${{ matrix.partition }}/4
        run: cargo nextest run --partition 'count:${{ matrix.partition }}/4' --archive-file 'nextest-forge-archive.tar.zst' e2e

  test-forge-integration:
    runs-on: ubuntu-latest
    needs: [ get-scarb-versions, build-test-nextest-archive]
    strategy:
      fail-fast: false
      matrix:
        partition: [ 1, 2, 3, 4 ]
        version: ${{ fromJSON(needs.get-scarb-versions.outputs.versions) }}

    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@82a92a6e8fbeee089604da2575dc567ae9ddeaab
      - uses: software-mansion/setup-scarb@v1
        with:
          scarb-version: ${{ matrix.version }}
      - uses: software-mansion/setup-universal-sierra-compiler@v1
      - name: Install cairo-profiler
        run: |
          curl -L https://raw.githubusercontent.com/software-mansion/cairo-profiler/main/scripts/install.sh | sh
      - uses: taiki-e/install-action@nextest
      - uses: actions/download-artifact@v4
        with:
          name: nextest-forge-archive

      - name: Check scarb version
        run: scarb --version

      - name: nextest partition integration ${{ matrix.partition }}/4
        run: cargo nextest run --partition 'count:${{ matrix.partition }}/4' --archive-file 'nextest-forge-archive.tar.zst' integration

  test-cast-e2e:
    runs-on: ubuntu-latest
    needs: [ get-scarb-versions, build-test-nextest-archive]
    strategy:
      fail-fast: false
      matrix:
        partition: [ 1, 2, 3, 4 ]
        version: ${{ fromJSON(needs.get-scarb-versions.outputs.versions) }}

    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@7b1c307e0dcbda6122208f10795a713336a9b35a
        with:
          toolchain: stable
      - uses: Swatinem/rust-cache@82a92a6e8fbeee089604da2575dc567ae9ddeaab
      - uses: software-mansion/setup-scarb@v1
        with:
          scarb-version: ${{ matrix.version }}
      - uses: software-mansion/setup-universal-sierra-compiler@v1
      - uses: taiki-e/install-action@nextest
      - uses: actions/download-artifact@v4
        with:
          name: nextest-cast-archive

      - name: Install starknet-devnet-rs
        run: ./scripts/install_devnet.sh

      - name: nextest partition integration ${{ matrix.partition }}/4
        run: cargo nextest run --partition 'count:${{ matrix.partition }}/4' --archive-file 'nextest-cast-archive.tar.zst' e2e
